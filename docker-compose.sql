create database mir4scope;

\c mir4scope;

create table
  public.inventory (
    id bigint generated by default as identity,
    inventory jsonb null,
    craft_materials jsonb null,
    constraint inventory_pkey primary key (id)
  ) tablespace pg_default;

create table
  public.magic_orb (
    id bigint generated by default as identity,
    equip_item jsonb not null,
    active_deck text null default '"0"'::text,
    constraint magic_orb_pkey primary key (id)
  ) tablespace pg_default;

create table
  public.magic_stone (
    id bigint generated by default as identity,
    equip_item jsonb not null,
    active_deck text null default '"0"'::text,
    constraint magic_stone_pkey primary key (id)
  ) tablespace pg_default;

create table
  public.mystical_piece (
    id bigint generated by default as identity,
    equip_item jsonb not null,
    active_deck text null,
    constraint mystical_piece_pkey primary key (id)
  ) tablespace pg_default;

create table
  public.spirits (
    id bigint generated by default as identity,
    equip jsonb not null,
    inven jsonb not null,
    constraint spirits_pkey primary key (id)
  ) tablespace pg_default;

create table
  public.succession (
    id bigint generated by default as identity,
    succession jsonb not null,
    constraint succession_pkey primary key (id)
  ) tablespace pg_default;

create table
  public.nft (
    id bigint generated by default as identity,
    seq integer not null,
    transport_id bigint not null,
    nft_id text not null,
    sealed_dt integer not null,
    character_name text not null,
    class smallint not null,
    lvl smallint not null,
    power_score integer not null,
    price integer not null,
    mirage_score integer not null,
    mira_x integer not null,
    trade_type text not null,
    world_name text not null,
    stats jsonb not null,
    skills jsonb not null,
    training jsonb not null,
    buildings jsonb not null,
    assets jsonb not null,
    potentials jsonb not null,
    holy_stuff jsonb not null,
    codex jsonb not null,
    equip_items jsonb not null,
    reinforce integer not null,
    succession_id bigint null,
    spirits_id bigint null,
    magic_orb_id bigint null,
    inventory_id bigint null,
    magic_stone_id bigint null,
    mystical_piece_id bigint null,
    tickets jsonb null,
    constraint nft_pkey primary key (id, seq),
    constraint nft_seq_key unique (seq),
    constraint nft_nft_id_key unique (nft_id),
    constraint public_nft_magic_stone_id_fkey foreign key (magic_stone_id) references magic_stone (id) on delete cascade,
    constraint public_nft_mystical_piece_id_fkey foreign key (mystical_piece_id) references mystical_piece (id) on delete cascade,
    constraint public_nft_spirits_id_fkey foreign key (spirits_id) references spirits (id) on delete cascade,
    constraint public_nft_succession_id_fkey foreign key (succession_id) references succession (id) on delete cascade,
    constraint public_nft_inventory_id_fkey foreign key (inventory_id) references inventory (id) on delete cascade,
    constraint public_nft_magic_orb_id_fkey foreign key (magic_orb_id) references magic_orb (id) on delete cascade
  ) tablespace pg_default;

create index if not exists nft_spirits_id_idx on public.nft using btree (spirits_id) tablespace pg_default;

create index if not exists nft_succession_id_idx on public.nft using btree (succession_id) tablespace pg_default;

create index if not exists nft_inventory_id_idx on public.nft using btree (inventory_id) tablespace pg_default;

create index if not exists nft_magic_orb_id_idx on public.nft using btree (magic_orb_id) tablespace pg_default;

create index if not exists nft_magic_stone_id_idx on public.nft using btree (magic_stone_id) tablespace pg_default;

create index if not exists nft_mystical_piece_id_idx on public.nft using btree (mystical_piece_id) tablespace pg_default;